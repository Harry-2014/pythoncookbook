'''
1.2 解压可迭代对象赋值给多个变量
    问题:
    如果一个可迭代对象的元素个数超过变量个数时，会抛出一个ValueError 。那么
怎样才能从这个可迭代对象中解压出N 个元素出来？
    解决方案
    Python 的星号表达式可以用来解决这个问题。
    扩展的迭代解压语法是专门为解压不确定个数或任意个数元素的可迭代对象而设
计的。通常，这些可迭代对象的元素结构有确定的规则（比如第1 个元素后面都是电
话号码），星号表达式让开发人员可以很容易的利用这些规则来解压出元素来。而不是
通过一些比较复杂的手段去获取这些关联的元素值。
    值得注意的是，星号表达式在迭代元素为可变长元组的序列时是很有用的。
    星号解压语法在字符串操作的时候也会很有用，比如字符串的分割。
    有时候，你想解压一些元素后丢弃它们，你不能简单就使用* ，但是你可以使用一
个普通的废弃名称，比如_ 或者ign （ignore）(忽视的格式是：*_,*号在前面)
'''

records = [
    ('foo', 1, 2),
    ('bar', 'hello'),
    ('foo', 3, 4),
]
def do_foo(x, y):
    print('foo', x, y)
def do_bar(s):
    print('bar', s)

for tag,*args in records:
    if tag == 'foo':
        do_foo(*args)
    elif tag == 'bar':
        do_bar(*args)