'''
2.20 字节字符串上的字符串操作
问题
你想在字节字符串上执行普通的文本操作(比如移除，搜索和替换)。
解决方案
字节字符串同样也支持大部分和文本字符串一样的内置操作。
使用前面带b的字母定义
'''
data = b'Hello World'
print(data)

'''
你可以使用正则表达式匹配字节字符串，但是正则表达式本身必须也是字节串
'''
'''

大多数情况下，在文本字符串上的操作均可用于字节字符串。然而，这里也有一些
需要注意的不同点。首先，字节字符串的索引操作返回整数而不是单独字符。

'''

a = 'Hello World' # Text string
print(a[0])

b = b'Hello World' # Byte string
print(b[0])

'''
这种语义上的区别会对于处理面向字节的字符数据有影响。
第二点，字节字符串不会提供一个美观的字符串表示，也不能很好的打印出来，除
非它们先被解码为一个文本字符串。
如果你想格式化字节字符串，你得先使用标准的文本字符串，然后将其编码为字节
字符串。
最后需要注意的是，使用字节字符串可能会改变一些操作的语义，特别是那些跟文
件系统有关的操作。比如，如果你使用一个编码为字节的文件名，而不是一个普通的文
本字符串，会禁用文件名的编码/解码。
'''
'''
最后提一点，一些程序员为了提升程序执行的速度会倾向于使用字节字符串而
不是文本字符串。尽管操作字节字符串确实会比文本更加高效(因为处理文本固有的
Unicode 相关开销)。这样做通常会导致非常杂乱的代码。你会经常发现字节字符串并不
能和Python 的其他部分工作的很好，并且你还得手动处理所有的编码/解码操作。坦
白讲，如果你在处理文本的话，就直接在程序中使用普通的文本字符串而不是字节字符
串。不做死就不会死！
'''